Filesystem      Size  Used Avail Use% Mounted on
/dev/md0         28T  200G   28T   1% /tmp
[preflight] clearing cached JSON datasets under: /tmp/stuananthu/10100/hf/datasets/json
INFO 09-16 10:05:51 __init__.py:183] Automatically detected platform cuda.
{'batch_size': 8,
 'column_name': 'instruction',
 'dataset_path': 'tatsu-lab/alpaca_eval',
 'do_sample': True,
 'hf_n_chunk': 4,
 'load_from_disk': False,
 'max_new_tokens': 1024,
 'max_size': None,
 'model_name_or_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/results/qwen2-7b/phase6_ce_wd',
 'n': 32,
 'remove_old': True,
 'save_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/evals/qwen2-7b/phase6_ce_wd/evaluation_chat_alpaca/responses.json',
 'seed': 42,
 'split': 'eval',
 'standard_format': False,
 'temperature': 0.6,
 'tokenizer_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/models/Qwen2-7B',
 'top_k': 50,
 'top_p': 0.9,
 'use_vllm': True,
 'vllm_gpu_memory_utilization': 0.9}
/tmp/stuananthu/10100/hf/datasets/downloads/d0315a78ff866a8279d4ac118e5ebebd066bf09cf2414953be50a65d6203592f
INFO 09-16 10:06:57 config.py:526] This model supports multiple tasks: {'classify', 'embed', 'generate', 'reward', 'score'}. Defaulting to 'generate'.
WARNING 09-16 10:06:57 arg_utils.py:1119] Chunked prefill is enabled by default for models with max_model_len > 32K. Currently, chunked prefill might not work with some features or models. If you encounter any issues, please disable chunked prefill by setting --enable-chunked-prefill=False.
INFO 09-16 10:06:57 config.py:1538] Chunked prefill is enabled with max_num_batched_tokens=2048.
INFO 09-16 10:06:57 llm_engine.py:232] Initializing a V0 LLM engine (v0.7.1) with config: model='/home/users/astar/cfar/stuananthu/LLMDiversity/results/qwen2-7b/phase6_ce_wd', speculative_config=None, tokenizer='/home/users/astar/cfar/stuananthu/LLMDiversity/models/Qwen2-7B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=42, served_model_name=/home/users/astar/cfar/stuananthu/LLMDiversity/results/qwen2-7b/phase6_ce_wd, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 09-16 10:07:00 cuda.py:235] Using Flash Attention backend.
INFO 09-16 10:07:00 model_runner.py:1111] Starting to load model /home/users/astar/cfar/stuananthu/LLMDiversity/results/qwen2-7b/phase6_ce_wd...
INFO 09-16 10:07:15 model_runner.py:1116] Loading model weights took 14.2165 GB
INFO 09-16 10:07:16 worker.py:266] Memory profiling takes 0.75 seconds
INFO 09-16 10:07:16 worker.py:266] the current vLLM instance can use total_gpu_memory (44.42GiB) x gpu_memory_utilization (0.90) = 39.98GiB
INFO 09-16 10:07:16 worker.py:266] model weights take 14.22GiB; non_torch_memory takes 0.08GiB; PyTorch activation peak memory takes 1.40GiB; the rest of the memory reserved for KV Cache is 24.28GiB.
INFO 09-16 10:07:16 executor_base.py:108] # CUDA blocks: 28413, # CPU blocks: 18724
INFO 09-16 10:07:16 executor_base.py:113] Maximum concurrency for 131072 tokens per request: 3.47x
INFO 09-16 10:07:27 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-16 10:07:40 model_runner.py:1563] Graph capturing finished in 14 secs, took 0.24 GiB
INFO 09-16 10:07:40 llm_engine.py:429] init engine (profile, create kv cache, warmup model) took 25.22 seconds
[info] Using vLLM backend.
{'add_gen_prompt': True,
 'baseline_json': '/home/users/astar/cfar/stuananthu/LLMDiversity/assets/gpt4_alpacaeval_responses.json',
 'batch_size': 2,
 'data_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/evals/qwen2-7b/phase6_ce_wd/evaluation_chat_alpaca/responses.json',
 'detokenizer_path': None,
 'max_size': None,
 'model_name_or_path': 'sfairXC/FsfairX-LLaMA3-RM-v0.1',
 'save_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/evals/qwen2-7b/phase6_ce_wd/evaluation_chat_alpaca/rewards.json',
 'summary_path': '/home/users/astar/cfar/stuananthu/LLMDiversity/evals/qwen2-7b/phase6_ce_wd/evaluation_chat_alpaca/reward_summary.json',
 'tokenizer_path': 'sfairXC/FsfairX-LLaMA3-RM-v0.1'}
